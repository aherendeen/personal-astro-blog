---
import { SITE_BASE } from '@/consts'
import FormattedDate from './FormattedDate.astro'
import type { ImageMetadata } from 'astro'
import { Image } from 'astro:assets'

const { post, eager = false } = Astro.props

const blogImages = import.meta.glob(
	'/src/assets/blogimages/**/*.{jpeg,jpg,png,gif}'
)

const coverImagePath = `/src/assets/blogimages/${post.slug}/cover.jpg`
let coverImage: ImageMetadata | null = null
if (blogImages[coverImagePath]) {
	const modRaw = (await blogImages[coverImagePath]()) as unknown
	type ImgModule = { default?: ImageMetadata } | ImageMetadata
	const modTyped = modRaw as ImgModule
	// some environments export the image as default, others as the module itself
	coverImage = (modTyped &&
		((modTyped as { default?: ImageMetadata }).default ??
			(modTyped as ImageMetadata))) as ImageMetadata
}
---

<a
	href={`${SITE_BASE}/blog/${post.slug}/`}
	class="flex flex-col gap-4 pb-8 h-full group transition-colors"
>
	{
		coverImage && (
			<Image
				src={coverImage}
				alt={post.data.title}
				class="object-cover rounded-xl aspect-video"
				loading={eager ? 'eager' : 'lazy'}
				decoding="async"
				fetchpriority={eager ? 'high' : 'auto'}
			/>
		)
	}
	<h4
		class="text-2xl font-semibold group-hover:text-primary dark:group-hover:text-primary-dark group-hover:underline transition-colors"
	>
		{post.data.title}
	</h4>
	<p class="line-clamp-3 opacity-80">
		{post.data.description}
	</p>
	<p class="uppercase text-sm mt-auto tracking-tight">
		<FormattedDate date={post.data.pubDate} />
	</p>
</a>
